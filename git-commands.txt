Commit a File:

  git commit <path/filename>

  OR USE GUI:

  git citool

Stash a File:

git stash 

View Stashes:

git stash list

Reapply Stash:

Latest stash

git stash reapply

Specific stash

git stash apply stash@{2}

git stash pop
if there were merge conflicts:

git stash drop

Update your repo:

First, commit or stash all changes
git pull
git mergetool --tool=meld

Update with rebase:

git pull --rebase

Undo pull

git reflog
git reset --hard 26a96f1

Create a new branch

git checkout -b <branch>

List Branches

git branch
git branch -v

Delete a local branch

git branch -d <branchname>

Cherry-pick from a remote repo

cd /home/you/projectA
git remote add projectB /home/you/projectB
git fetch projectB

Then you have a choice:

git merge projectB/master

or:

git cherry-pick <first_commit>..<last_commit>

git init
Transform the current directory into a Git repository. This adds a .git folder to the current directory and makes it possible to start recording revisions of the project.

• Replace a single file in model with head version
	○ git checkout HEAD -- my-file.txt

Temporarily switch to a different commit

If you want to temporarily go back to it, fool around, then come back to where you are, all you have to do is check out the desired commit:

# This will detach your HEAD, that is, leave you with no branch checked out:

git checkout 0d1d7fc32

Or if you want to make commits while you're there, go ahead and make a new branch while you're at it:


git checkout -b old-state 0d1d7fc32
